---
- name: Generating Workers/kube-proxy config files, part 1
  #shell: "kubectl config set-cluster {{ cluster_name }} --certificate-authority=/tmp/ca.pem --embed-certs=true -server=https://{{ master_ip }}:6443 --kubeconfig=/tmp/{{ item }}.kubeconfig"
  shell: "kubectl config set-cluster {{ cluster_name }} --insecure-skip-tls-verify=true --server=http://{{ master_ip }}:8080 --kubeconfig=/tmp/{{ item }}.kubeconfig"
  with_items:
    - "{{ groups['workers'] }}"
    - kube-proxy
    - admin
  tags: pre

- name: Generating Workers config files, part 2
#  shell: "kubectl config set-credentials system:node:{{ item }} --client-certificate=/tmp/{{ item }}.pem --client-key=/tmp/{{ item }}-key.pem --embed-certs=true --kubeconfig=/tmp/{{ item }}.kubeconfig"
  shell: "kubectl config set-credentials system:node:{{ item }} --insecure-skip-tls-verify=true --kubeconfig=/tmp/{{ item }}.kubeconfig"
  with_items:
    - "{{ groups['workers'] }}"
  tags: pre

- name: Generating kube-proxy/admin config files, part 2
  #shell: "kubectl config set-credentials {{ item }} --client-certificate=/tmp/{{ item }}.pem --client-key=/tmp/{{ item }}-key.pem --embed-certs=true --kubeconfig=/tmp/{{ item }}.kubeconfig"
  shell: "kubectl config set-credentials {{ item }} --insecure-skip-tls-verify=true --kubeconfig=/tmp/{{ item }}.kubeconfig"
  with_items:
    - kube-proxy
    - admin
  tags: pre

- name: Generating Workers config files, part 3
  #shell: "kubectl config set-context default --cluster={{ cluster_name }} --user=system:node:{{ item }} --kubeconfig=/tmp/{{ item }}.kubeconfig"
  shell: "kubectl config set-context default --cluster={{ cluster_name }} --user=system:node:{{ item }} --insecure-skip-tls-verify=true --kubeconfig=/tmp/{{ item }}.kubeconfig"
  with_items:
    - "{{ groups['workers'] }}"
  tags: pre

- name: Generating kube-proxy/admin config files, part 3
  #shell: "kubectl config set-context default --cluster={{ cluster_name }} --user={{ item }} --kubeconfig=/tmp/{{ item }}.kubeconfig"
  shell: "kubectl config set-context default --cluster={{ cluster_name }} --user={{ item }} --insecure-skip-tls-verify=true --kubeconfig=/tmp/{{ item }}.kubeconfig"
  with_items:
    - kube-proxy
    - admin
  tags: pre

- name: Generating Workers/kube-proxy config files, part 4
  #shell: "kubectl config use-context default --kubeconfig=/tmp/{{ item }}.kubeconfig"
  shell: "kubectl config use-context default --insecure-skip-tls-verify=true --kubeconfig=/tmp/{{ item }}.kubeconfig"
  with_items:
    - "{{ groups['workers'] }}"
    - kube-proxy
    - admin
  tags: pre

- name: Generating Control-plane config files, part 1
  #shell: "kubectl config set-cluster {{ cluster_name }} --certificate-authority=/tmp/ca.pem --embed-certs=true -server=https://{{ master_ip }}:6443 --kubeconfig=/tmp/{{ item }}.kubeconfig"
  shell: "kubectl config set-cluster {{ cluster_name }} --insecure-skip-tls-verify=true --server=http://127.0.0.1:8080 --kubeconfig=/tmp/{{ item }}.kubeconfig"
  with_items:
    - kube-scheduler
    - kube-controller-manager
  tags: pre

- name: Generating Control-plane config files, part 2
#  shell: "kubectl config set-credentials system:{{ item }} --client-certificate=/tmp/{{ item }}.pem --client-key=/tmp/{{ item }}-key.pem --embed-certs=true --kubeconfig=/tmp/{{ item }}.kubeconfig"
  shell: "kubectl config set-credentials system:{{ item }} --insecure-skip-tls-verify=true --kubeconfig=/tmp/{{ item }}.kubeconfig"
  with_items:
    - kube-scheduler
    - kube-controller-manager
  tags: pre

- name: Generating Control-plane config files, part 3
  #shell: "kubectl config set-context default --cluster={{ cluster_name }} --user=system:{{ item }} --kubeconfig=/tmp/{{ item }}.kubeconfig"
  shell: "kubectl config set-context default --cluster={{ cluster_name }} --user=system:{{ item }} --insecure-skip-tls-verify=true --kubeconfig=/tmp/{{ item }}.kubeconfig"
  with_items:
    - kube-scheduler
    - kube-controller-manager
  tags: pre

- name: Generating Control-plane config files, part 4
  #shell: "kubectl config use-context default --kubeconfig=/tmp/{{ item }}.kubeconfig"
  shell: "kubectl config use-context default --insecure-skip-tls-verify=true --kubeconfig=/tmp/{{ item }}.kubeconfig"
  with_items:
    - kube-scheduler
    - kube-controller-manager
  tags: pre

- name: Encryption key for encryption-config
  shell: "head -c 32 /dev/urandom | base64"
  register: encryption_output
  tags: pre

#- name: Showing encryption_output
#  debug: "{{ encryption_output }}"

- name: Generating encryption-config file 
  template:
    src: "encryption-config.j2"
    dest: "/tmp/encryption-config.yaml"
  vars: 
    encryption_key: "{{ encryption_output.stdout }}"
  tags: pre

#- name: Generating etcd.service file 
#  template:
#    src: "encryption-config.j2"
#    dest: "/tmp/encryption-config.yaml"
#  vars: 
#    encryption_key: encryption_output.stdout[0]

#- name: Copying admin kubeconfig to home of admin
#  copy:
#    src: /tmp/admin.kubeconfig
#    dest: ~/

- name: Generating DNS add-on file
  template: 
    src: "kube-dns.j2"
    dest: "/tmp/kube-dns.yaml"
  tags: pre

- name: Generating DNS add-on file
  template: 
    src: "{{ item }}.j2"
    dest: "/tmp/{{ item }}.yaml"
  with_items:
    - kube-dns
    - coredns
  tags: pre

- name: Giving enough rights to be able to distribute kubeconfig files
  file:
    path: "{{ item }}"
    mode: "o+r"
  with_fileglob:
    - /tmp/*.kubeconfig
  tags: pre