---
#freeradius-admin

- name: install system wide dependency 
  apt: name=libmysqlclient-dev state=present

- name: create djra database
  action: mysql_db name={{ djra_db_name }} collation=utf8_general_ci encoding=utf8 
  tags: djra

- name: setup djra database user
  action: mysql_user name={{ djra_db_user }} password={{ djra_db_password }} priv={{ djra_db_name }}.*:ALL state=present
  tags: djra

- name: check if old hg repo exists
  stat: path=/opt/djra/code/.hg
  register: st

- name: remove old hg repo
  file: path=/opt/djra/code state=absent
  when: st.stat.isdir is defined and st.stat.isdir

- name: ensure directory used by djra exists
  action: file path={{ item }} state=directory
  with_items:
    - /opt/djra
    - /opt/djra/code
    - /opt/djra/env
    - /opt/djra/data
    - /opt/djra/data/static
    - /opt/djra/data/db
  tags: djra


- name: pull djra
  git: repo=https://github.com/ftao/django-freeradius-admin.git dest=/opt/djra/code/ force=yes
  notify:
    - restart djra
  tags: djra

- name: setup enviroment
  action: pip requirements=/opt/djra/code/requirements.txt virtualenv=/opt/djra/env 
  notify:
    - restart djra
  tags: djra

- name: upload ipdb file
  copy: src={{ djra_ip_db_file }} dest=/opt/djra/data/ipdb.dat
  when: djra_ip_db_file != ''

- name: setup local_settings.py
  action: template src=local_settings.py dest=/opt/djra/code/djra/local_settings.py
  notify:
    - restart djra
  tags: 
    - djra
    - app

- name: migrate
  action: django_manage command=syncdb app_path=/opt/djra/code/ virtualenv=/opt/djra/env
  tags: 
    - djra
    - app

- name: collect static files
  action: django_manage command=collectstatic app_path=/opt/djra/code/ virtualenv=/opt/djra/env
  tags: 
    - djra
    - app

- name: upload setup admin script
  template: src=setup_admin.py dest=/tmp/djra_setup_admin.py mode=700
  when: djra_setup_admin

- name: setup default admin
  shell: PYTHONPATH=/opt/djra/code DJANGO_SETTINGS_MODULE="djra.settings" /opt/djra/env/bin/python /tmp/djra_setup_admin.py
         chdir=/opt/djra/code/
  tags: 
    - djra
    - app
    - setup
  when: djra_setup_admin 

- name: setup supervisor config
  action: template src=djra.supervisor.conf dest=/etc/supervisor/conf.d/djra.conf
  notify:
    - restart djra
  tags: 
    - djra
    - app
