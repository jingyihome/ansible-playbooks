---

- name: create target directory
  file: path={{ item }} state=directory
  with_items:
    - /opt/chinadns
    - /var/chinadns
    - /usr/local/bin
  tags:
    - chinadns
    - dir

- name: check installation
  stat: path=/usr/local/bin/chinadns
  register: bin
  tags:
    - chinadns
    - check

- name: check git
  stat: path=/opt/chinadns/README.md
  register: git
  tags:
    - chinadns
    - check

- name: install build essential
  apt: pkg={{ item }} state=present
  with_items:
    - build-essential
    - autoconf
    - automake
    - libtool
  when: bin.stat.exists == False
  tags:
    - chinadns
    - buildessential

- name: git clone chinadns
  git: >
    repo=https://github.com/clowwindy/ChinaDNS.git force=yes
    dest=/opt/chinadns version=1.3.1
  when: git.stat.exists == False
  tags:
    - chinadns
    - clone

- name: build chinadns
  shell: sh autogen.sh && ./configure && make
  args:
    chdir: /opt/chinadns
  when: bin.stat.exists == False
  tags:
    - chinadns
    - build

- name: copy bin to proper place
  shell: cp /opt/chinadns/src/chinadns /usr/local/bin/chinadns
  when: bin.stat.exists == False
  tags:
    - chinadns
    - copy

- name: make chinadns excutable
  file: path=/usr/local/bin/chinadns mode=0755
  when: bin.stat.exists == False
  tags:
    - chinadns
    - mode

- name: fetch chnroute.txt
  raw: curl 'http://ftp.apnic.net/apnic/stats/apnic/delegated-apnic-latest' | grep ipv4 | grep CN | awk -F\| '{ printf("%s/%d\n", $4, 32-log($5)/log(2)) }' > /var/chinadns/chnroute.txt
  tags:
    - chinadns
    - chnroute

- name: setup chinadns server
  template: src=chinadns.supervisor.conf dest=/etc/supervisor/conf.d/chinadns.conf
  notify:
    - restart chinadns-server
  tags:
    - chinadns
    - supervisor

- include: update_resolvconf.yml
  when: update_resolvconf
