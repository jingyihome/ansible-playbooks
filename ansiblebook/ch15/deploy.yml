- name: install Docker
  hosts: dockerhosts
  become: True
  tasks:
    - name: install packages
      apt: name={{ item }} update_cache=yes cache_valid_time=3600
      with_items:
        - apt-transport-https
        - ca-certificates
        - linux-image-extra-{{ ansible_kernel }}
        - linux-image-extra-virtual
        - software-properties-common
        - python-pip
    - name: add Docker's GPG key
      apt_key:
          id: 58118E89F3A912897C070ADBF76221572C52609D
          url: https://yum.dockerproject.org/gpg
    - name: add Docker stable repository
      apt_repository:
        repo: deb https://apt.dockerproject.org/repo/ ubuntu-{{ansible_distribution_release}} main
        update_cache: yes
    - name: install Docker
      apt: name=docker-engine
    - name: install docker-py
      pip: name=docker-py


- name: deploy postgres
  hosts: postgres
  become: True
  gather_facts: False
  vars:
    data_dir: /data/pgdata
  tasks:
    - name: create data dir with correct ownership
      file:
        path: "{{ data_dir }}"
        state: directory
    - name: start postgres container
      docker_container:
        name: postgres_ghost
        image: postgres:9.6
        ports:
          - "0.0.0.0:5432:5432"
        volumes:
          - "{{ data_dir }}:/var/lib/postgresql/data"
        env:
          POSTGRES_USER: "{{ database_user }}"
          POSTGRES_PASSWORD: "{{ database_password }}"
          POSTGRES_DB: "{{ database_name }}"

- name: deploy ghost
  hosts: ghost
  become: True
  gather_facts: False
  vars:
    url: "https://{{ ansible_host }}"
    database_host: "{{ groups['postgres'][0] }}"
    data_dir: /data/ghostdata
    certs_dir: /data/certs
    net_name: ghostnet
  tasks:
    - name: create network
      docker_network: "name={{ net_name }}"
    - name: create ghostdata directory
      file:
        path: "{{ data_dir }}"
        state: directory
    - name: generate the config file
      template: src=templates/config.js.j2 dest={{ data_dir }}/config.js
    - name: start ghost container
      docker_container:
        name: ghost
        image: ghost
        command: npm start --production
        volumes:
          - "{{ data_dir }}:/var/lib/ghost"
        networks:
          - name: "{{ net_name }}"
    - name: create certs directory
      file:
        path: "{{ certs_dir }}"
        state: directory
    - name: generate tls certs
      command: >
        openssl req -new -x509 -nodes
        -out "{{ certs_dir }}/nginx.crt" -keyout "{{ certs_dir }}/nginx.key"
        -subj "/CN={{ ansible_host}}" -days 3650
        creates=certs/nginx.crt
    - name: start nginx container
      docker_container:
        name: nginx_ghost
        image: ansiblebook/nginx-ghost
        pull: yes
        networks:
          - name: "{{ net_name }}"
        ports:
          - "0.0.0.0:80:80"
          - "0.0.0.0:443:443"
        volumes:
          - "{{ certs_dir }}:/certs"
